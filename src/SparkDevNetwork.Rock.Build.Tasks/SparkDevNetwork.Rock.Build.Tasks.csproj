<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net6.0;net472</TargetFrameworks>
    <GenerateDependencyFile>True</GenerateDependencyFile>

    <IsPackable>true</IsPackable>
    <Version>1.0.0-rc.5</Version>
    <Title>SparkDevNetwork.Rock.Build.Tasks</Title>
    <Authors>Spark Development Network</Authors>
    <Description>MSBuild tasks for Rock RMS projects.</Description>
    <Copyright>Copyright Â© Spark Development Network 2023</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>Icon.png</PackageIcon>

    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
    <NoWarn>NU5100;NU5128</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="SparkDevNetwork.Rock.Build.Tasks.Tests" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="build\SparkDevNetwork.Rock.Build.Tasks.props" PackagePath="build\" />
    <Content Include="build\SparkDevNetwork.Rock.Build.Tasks.targets" PackagePath="build\" />
    <Content Include="Icon.png" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.8.3" PrivateAssets="all" ExcludeAssets="Runtime" />
    <PackageReference Include="System.Reflection.MetadataLoadContext" Version="8.0.0" PrivateAssets="all" />
    <PackageReference Include="System.Text.Json" Version="8.0.5" />
    <PackageReference Include="TestableIO.System.IO.Abstractions.Analyzers" Version="2022.0.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="TestableIO.System.IO.Abstractions.Wrappers" Version="21.0.2" />
    <!-- Marks all packages as 'local only' so they don't end up in the nuspec. -->
    <PackageReference Update="@(PackageReference)" PrivateAssets="All"/>
  </ItemGroup>

  <!-- Update the paths that project references get copied to. -->
  <Target
    Name="CopyProjectReferencesToPackage"
    DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage
        Include="@(ReferenceCopyLocalPaths)"
        TargetPath="%(ReferenceCopyLocalPaths.DestinationSubPath)" />
    </ItemGroup>
  </Target>

  <!-- This target adds the generated deps.json file to our package output -->
  <Target
    Name="AddBuildDependencyFileToBuiltProjectOutputGroupOutput"
    BeforeTargets="BuiltProjectOutputGroup"
    Condition=" '$(GenerateDependencyFile)' == 'true' ">

    <ItemGroup>
      <BuiltProjectOutputGroupOutput
        Include="$(ProjectDepsFilePath)"
        TargetPath="$(ProjectDepsFileName)"
        FinalOutputPath="$(ProjectDepsFilePath)" />
    </ItemGroup>
  </Target>
</Project>
